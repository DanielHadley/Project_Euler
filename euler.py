# Euler1
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.
# My solution uses list slicing and a lambda function
my_list = range(1000)
answer = sum (filter(lambda x: x % 3 == 0 or x % 5 == 0, my_list))
print answer


# Euler2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


fib = [1, 2]
while fib[-1] < 4000000:
	fib.append(fib[-1] + fib[-2])

answer = sum(filter(lambda x: x % 2 == 0, fib))
print(answer)


